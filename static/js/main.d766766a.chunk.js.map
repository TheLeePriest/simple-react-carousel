{"version":3,"sources":["../../src/store/defaultOptions.js","../../src/store/store.js","../../src/components/CarouselItem/CarouselItem.js","../../src/components/SVG/NextChevron.js","../../src/components/SVG/PreviousChevron.js","../../src/components/CarouselButton/CarouselButton.js","../../src/components/Indicators/Indicators.js","../../src/modules/helpers.js","../../src/components/Carousel/Carousel.js","../../src/hooks/useWindowResizeEvent.js","../../src/index.js","App.js","index.js"],"names":["defaultControlsOptions","show","position","leftControlIcon","rightControlIcon","backgroundColor","shape","width","height","iconHeight","iconWidth","iconFill","borderRadius","defaultIndicatorOptions","activeColor","inactiveColor","border","boxShadow","store","createContext","Provider","StateProvider","children","childCount","autoPlay","autoChangeTime","contentCoversContainer","itemFit","controlsOptions","indicatorOptions","slideTransitionValue","currentSlideTransition","useReducer","type","payload","activeItem","carouselWidth","translateValue","state","activeSlides","dispatch","value","Item","styled","ChildWrapper","coverContainer","CarouselItem","index","overrideFit","useContext","objectFitValue","data-testid","active","data-active","slideTransition","NextChevron","fill","role","version","xmlns","viewBox","aria-labelledby","id","d","PreviousChevron","CarouselButtonElement","props","options","console","CarouselButton","previous","onClick","aria-label","React","Wrapper","Indicator","Indicators","useState","wrapperWidth","setWrapperWidth","useEffect","style","Array","key","handleClick","getDimensions","element","CarouselWrapper","Carousel","wrapperRef","useRef","windowWidth","getWindowWidth","window","setWindowWidth","resize","useWindowResizeEvent","autoPlayRef","transitionRef","handleNext","isLast","setActiveSlides","useCallback","transitionEnd","event","interval","setInterval","clearInterval","newActiveSlides","tabIndex","ref","transition","data-name","slide","transform","showIndicators","App","src","alt","data-itemFit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d766766a.chunk.js","sourcesContent":["export const defaultControlsOptions = {\n  show: true,\n  position: \"middle\",\n  leftControlIcon: null,\n  rightControlIcon: null,\n  backgroundColor: \"rgba(0, 0, 0, 0.75)\",\n  shape: \"rectangle\",\n  width: \"auto\",\n  height: \"auto\",\n  iconHeight: \"32\",\n  iconWidth: \"32\",\n  iconFill: \"#FFFFFF\",\n  borderRadius: \"3px\"\n};\n\nexport const defaultIndicatorOptions = {\n  show: true,\n  shape: \"pill\",\n  height: \"5px\",\n  width: \"20px\",\n  activeColor: \"rgba(0,0,0,0.75)\",\n  inactiveColor: \"rgba(255,255,255,0.75)\",\n  border: \"none\",\n  boxShadow: \"0 0 3px rgba(0, 0, 0, 0.16), 0 0 3px rgba(0, 0, 0, 0.23)\"\n};\n","import React, { createContext, useReducer } from \"react\";\nimport {\n  defaultControlsOptions,\n  defaultIndicatorOptions\n} from \"./defaultOptions\";\n\nconst store = createContext({});\nconst { Provider } = store;\n\nconst StateProvider = ({\n  children,\n  childCount = 0,\n  autoPlay = false,\n  autoChangeTime = 3,\n  contentCoversContainer = true,\n  itemFit = \"cover\",\n  controlsOptions,\n  indicatorOptions,\n  slideTransitionValue = 0.3,\n  currentSlideTransition = slideTransitionValue\n}) => {\n  const [state, dispatch] = useReducer(\n    (state, { type, payload }) => {\n      switch (type) {\n        case \"updateActiveItem\":\n          return { ...state, activeItem: payload };\n        case \"setCarouselWidth\":\n          return { ...state, carouselWidth: payload };\n        case \"setTranslateValue\":\n          return { ...state, translateValue: payload };\n        case \"setToSpecificItem\": {\n          return {\n            ...state,\n            activeItem: payload,\n            translateValue: state.translateValue + state.carouselWidth\n          };\n        }\n        case \"setNextItem\": {\n          return {\n            ...state,\n            translateValue: state.translateValue + state.carouselWidth,\n            activeItem:\n              state.activeItem === childCount - 1 ? 0 : state.activeItem + 1\n          };\n        }\n        case \"setPreviousItem\": {\n          return {\n            ...state,\n            translateValue: 0,\n            activeItem:\n              state.activeItem === 0 ? childCount - 1 : state.activeItem - 1\n          };\n        }\n        case \"setActiveSlidesArray\": {\n          return {\n            ...state,\n            activeSlides: payload\n          };\n        }\n        case \"setCurrentSlideTransitionValue\": {\n          return {\n            ...state,\n            currentSlideTransition: payload\n          };\n        }\n        case \"triggerSlideTransition\": {\n          return {\n            ...state,\n            ...payload\n          };\n        }\n        case \"handleWindowResize\": {\n          return {\n            ...state,\n            ...payload\n          };\n        }\n        default:\n          return state;\n      }\n    },\n    {\n      activeItem: 0,\n      childCount,\n      translateValue: 0,\n      carouselWidth: 0,\n      autoPlay,\n      autoChangeTime,\n      contentCoversContainer,\n      itemFit,\n      controlsOptions: {\n        ...defaultControlsOptions,\n        ...controlsOptions\n      },\n      indicatorOptions: {\n        ...defaultIndicatorOptions,\n        ...indicatorOptions\n      },\n      activeSlides: [],\n      slideTransitionValue,\n      currentSlideTransition\n    }\n  );\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { store } from \"../../store/store\";\n\nconst Item = styled.li`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ChildWrapper = styled.div`\n  position: relative;\n  display: inherit;\n  max-width: 100%;\n  flex: ${({ coverContainer }) => (coverContainer ? \"1\" : \"unset\")};\n  height: 100%;\n\n  > *:first-child {\n    max-width: 100%;\n    width: ${({ width }) => `${width}px`};\n    flex: ${({ coverContainer }) => (coverContainer ? \"1\" : \"unset\")};\n    object-fit: ${({ coverContainer, itemFit }) =>\n      coverContainer ? itemFit : \"unset\"};\n  }\n`;\n\nconst CarouselItem = ({ children, index, overrideFit = false }) => {\n  const { state } = useContext(store);\n  const {\n    activeItem,\n    contentCoversContainer,\n    carouselWidth,\n    itemFit,\n    currentSlideTransition\n  } = state;\n  const objectFitValue = overrideFit || itemFit;\n\n  return (\n    <Item\n      data-testid={`carouselItem-${index}`}\n      active={index === activeItem}\n      data-active={index === activeItem}\n      slideTransition={currentSlideTransition}\n    >\n      <ChildWrapper\n        coverContainer={contentCoversContainer}\n        width={carouselWidth}\n        itemFit={objectFitValue}\n      >\n        {children}\n      </ChildWrapper>\n    </Item>\n  );\n};\n\nexport default CarouselItem;\n","import React from \"react\";\n\nconst NextChevron = ({ width = 80, height = 80, fill = \"#000000\" }) => {\n  return (\n    <svg\n      data-testid=\"next-chevron\"\n      role=\"img\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 80 80\"\n      aria-labelledby=\"nextChevronId nextChevronDescId\"\n    >\n      <title id=\"nextChevronId\">Next Item</title>\n      <desc id=\"nextChevronDescId\">\n        An arrow to go to the next item in the carousel\n      </desc>\n      <path\n        fill={fill}\n        d=\"M36.652 18.064c1.672 1.632 18.008 18.78 18.008 18.78 0.892 0.876 1.34 2.016 1.34 3.156s-0.448 2.28-1.34 3.148c0 0-16.336 17.156-18.008 18.78-1.672 1.632-4.68 1.744-6.46 0-1.784-1.736-1.924-4.164 0-6.296l14.988-15.632-14.988-15.632c-1.924-2.132-1.784-4.564 0-6.304 1.78-1.744 4.788-1.636 6.46 0z\"\n      />\n    </svg>\n  );\n};\n\nexport default NextChevron;\n","import React from \"react\";\n\nconst PreviousChevron = ({ width = 80, height = 80, fill = \"#000000\" }) => {\n  return (\n    <svg\n      data-testid=\"previous-chevron\"\n      role=\"img\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 80 80\"\n      aria-labelledby=\"previousChevronId previousChevronDescId\"\n    >\n      <title id=\"previousChevronId\">Previous Item</title>\n      <desc id=\"previousChevronDescId\">\n        An arrow to go to the previous item in the carousel\n      </desc>\n      <path\n        fill={fill}\n        d=\"M49.808 18.064c1.784 1.744 1.924 4.172 0 6.304l-14.988 15.632 14.988 15.632c1.924 2.132 1.784 4.564 0 6.296-1.78 1.744-4.788 1.632-6.46 0-1.672-1.624-18.008-18.78-18.008-18.78-0.892-0.868-1.34-2.008-1.34-3.148s0.448-2.28 1.34-3.156c0 0 16.336-17.148 18.008-18.78 1.672-1.636 4.68-1.744 6.46 0z\"\n      />\n    </svg>\n  );\n};\n\nexport default PreviousChevron;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { store } from \"../../store/store\";\nimport NextChevron from \"../SVG/NextChevron\";\nimport PreviousChevron from \"../SVG/PreviousChevron\";\n\nconst CarouselButtonElement = styled.button`\n  position: absolute;\n  ${props => (props.previous ? \"left: 10px;\" : \"right: 10px;\")};\n  z-index: 9;\n  top: ${({ options }) => {\n    switch (options.position) {\n      case \"top\":\n        return \"10px\";\n      case \"bottom\":\n        return \"calc(100% - (42px + 1rem))\";\n      default:\n        return \"50%\";\n    }\n  }};\n\n  ${({ options }) => {\n    switch (options.shape) {\n      case \"circle\": {\n        if (options.width === \"auto\") {\n          console.log(\"You haven't specified a width for the button!\");\n        }\n\n        return `width: ${options.width};\n        height: ${options.width};\n        border-radius: 50%;`;\n      }\n      case \"square\": {\n        if (options.width === \"auto\") {\n          console.log(\"You haven't specified a width for the button!\");\n        }\n\n        return `width: ${options.width};\n        height: ${options.width};\n        border-radius: 0;`;\n      }\n      default:\n        return `\n            width: ${options.width};\n            height: ${options.height};\n            border-radius: ${options.borderRadius};\n          `;\n    }\n  }}\n\n  ${({ options }) => {\n    if (options.position === \"middle\") {\n      return \"transform: scale(1);\";\n    }\n  }}\n\n\n  background: rgba(0, 0, 0, 0.75);\n  border: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem 0;\n  transition: all ease\n    ${({ currentSlideTransition }) => currentSlideTransition}s;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.16), 0 0 3px rgba(0, 0, 0, 0.23);\n\n  &:hover {\n    cursor: pointer;\n\n    ${({ options }) => {\n      if (options.position === \"middle\") {\n        return \"transform: scale(1.05);\";\n      } else {\n        return \"transform: scale(1.05)\";\n      }\n    }}\n  }\n`;\n\nconst CarouselButton = ({ previous }) => {\n  const { state, dispatch } = useContext(store);\n  const { controlsOptions, currentSlideTransition } = state;\n\n  const handleNext = () => {\n    dispatch({\n      type: \"setNextItem\"\n    });\n  };\n\n  const handlePrev = () => {\n    dispatch({\n      type: \"setPreviousItem\"\n    });\n  };\n\n  const handleClick = () => {\n    if (previous) {\n      handlePrev();\n      return;\n    }\n\n    handleNext();\n  };\n\n  const renderButtonBody = () => {\n    if (previous) {\n      if (\n        controlsOptions.leftControlIcon &&\n        React.isValidElement(controlsOptions.leftControlIcon)\n      ) {\n        return controlsOptions.leftControlIcon;\n      }\n\n      return (\n        <PreviousChevron\n          width={controlsOptions.iconWidth}\n          height={controlsOptions.iconWidth}\n          fill={controlsOptions.iconFill}\n        />\n      );\n    }\n\n    if (\n      controlsOptions.rightControlIcon &&\n      React.isValidElement(controlsOptions.rightControlIcon)\n    ) {\n      return controlsOptions.leftControlIcon;\n    }\n\n    return (\n      <NextChevron\n        width={controlsOptions.iconWidth}\n        height={controlsOptions.iconWidth}\n        fill={controlsOptions.iconFill}\n      />\n    );\n  };\n\n  return (\n    <CarouselButtonElement\n      onClick={handleClick}\n      previous={previous}\n      options={controlsOptions}\n      currentSlideTransition={currentSlideTransition}\n      aria-label={`${previous ? \"Previous\" : \"Next\"} image button`}\n    >\n      {renderButtonBody()}\n    </CarouselButtonElement>\n  );\n};\n\nexport default CarouselButton;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { store } from \"../../store/store\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  margin: auto;\n  position: absolute;\n  bottom: 5px;\n  left: 0;\n  right: 0;\n`;\n\nconst Indicator = styled.button`\n  ${({ options }) => {\n    switch (options.shape) {\n      case \"square\": {\n        return `width: ${options.width};\n          height: ${options.width};\n          border-radius: 0;\n          `;\n      }\n      case \"circle\": {\n        return `width: ${options.width};\n          height: ${options.width};\n          border-radius: 50%;\n          `;\n      }\n      default:\n        return `width: ${options.width};\n              height: ${options.height};\n              border-radius: 50px;`;\n    }\n  }}}\n  border: ${({ options }) => options.border};\n  background-color: ${({ active, options }) =>\n    active ? options.activeColor : options.inactiveColor};\n  box-shadow: ${({ options }) => options.boxShadow};\n  transition: all 0.3s ease;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Indicators = () => {\n  const { state, dispatch } = useContext(store);\n  const { childCount, activeItem, indicatorOptions } = state;\n  const [wrapperWidth, setWrapperWidth] = useState(20 * childCount);\n\n  const handleClick = index => {\n    dispatch({ type: \"setToSpecificItem\", payload: index });\n  };\n\n  const renderIndicators = () => {\n    return [...Array(childCount).fill(\"\")].map((_, index) => (\n      <Indicator\n        key={`indicator-${index}`}\n        data-testid={`indicator-${index}`}\n        data-active={index === activeItem}\n        active={index === activeItem}\n        onClick={() => handleClick(index)}\n        options={indicatorOptions}\n        aria-label={`Image ${index + 1} button`}\n      />\n    ));\n  };\n\n  useEffect(() => {\n    setWrapperWidth(20 * childCount + 5 * childCount);\n  }, [childCount]);\n\n  return (\n    <Wrapper\n      style={{ width: `${wrapperWidth}px` || `0px` }}\n      data-testid=\"indicators\"\n    >\n      {renderIndicators()}\n    </Wrapper>\n  );\n};\n\nexport default Indicators;\n","export const getDimensions = element => {\n  if (element) {\n    const { width, height } = element.getBoundingClientRect();\n    return { width, height };\n  }\n\n  return { width: 500, height: 500 };\n};\n","import React, { useContext, useRef, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { store } from \"../../store/store\";\nimport CarouselItem from \"../CarouselItem/CarouselItem\";\nimport useWindowResizeEvent from \"../../hooks/useWindowResizeEvent\";\nimport CarouselButton from \"../CarouselButton/CarouselButton\";\nimport Indicators from \"../Indicators/Indicators\";\nimport { getDimensions } from \"../../modules/helpers\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  height: 100vh;\n  max-height: 100%;\n`;\n\nconst CarouselWrapper = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: no-wrap;\n  position: relative;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  transition: transform ease-out ${({ transition }) => transition}s;\n  transform: translate(-${({ translateValue }) => translateValue}px, 0);\n`;\n\nconst Carousel = ({ children }) => {\n  const { state, dispatch } = useContext(store);\n  const {\n    activeItem,\n    translateValue,\n    autoPlay,\n    autoChangeTime,\n    childCount,\n    controlsOptions,\n    indicatorOptions,\n    activeSlides,\n    slideTransitionValue,\n    currentSlideTransition\n  } = state;\n  const wrapperRef = useRef(null);\n  const windowWidth = useWindowResizeEvent();\n  const autoPlayRef = useRef(null);\n  const transitionRef = useRef(null);\n\n  const handleNext = () => {\n    dispatch({\n      type: \"setNextItem\",\n      payload: { isLast: activeItem === childCount - 1 }\n    });\n  };\n\n  const setActiveSlides = useCallback(() => {\n    if (Array.isArray(children)) {\n      dispatch({\n        type: \"setActiveSlidesArray\",\n        payload: children.slice(children.slice(0, activeItem + 3))\n      });\n\n      return;\n    }\n\n    dispatch({\n      type: \"setActiveSlidesArray\",\n      payload: [children]\n    });\n  }, [children]);\n\n  useEffect(() => {\n    if (!children) {\n      return;\n    }\n    setActiveSlides();\n  }, []);\n\n  useEffect(() => {\n    autoPlayRef.current = handleNext;\n    transitionRef.current = slideTransition;\n  });\n\n  useEffect(() => {\n    if (currentSlideTransition === 0)\n      dispatch({\n        type: \"setCurrentSlideTransitionValue\",\n        payload: slideTransitionValue\n      });\n  }, [currentSlideTransition]);\n\n  useEffect(() => {\n    const fireTransition = event => {\n      if (event.target.dataset.name !== \"carouselWrapper\") return;\n      transitionRef.current();\n    };\n\n    const transitionEnd = window.addEventListener(\n      \"transitionend\",\n      fireTransition\n    );\n\n    if (autoPlay) {\n      const play = () => {\n        autoPlayRef.current();\n      };\n\n      const interval = setInterval(play, autoChangeTime * 1000);\n      return () => {\n        clearInterval(interval);\n        window.removeEventListener(\"transitionend\", transitionEnd);\n      };\n    }\n\n    return () => {\n      window.removeEventListener(\"transitionend\", transitionEnd);\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: \"handleWindowResize\",\n      payload: {\n        translateValue: activeItem * getDimensions(wrapperRef.current).width,\n        currentSlideTransition: 0\n      }\n    });\n  }, [windowWidth]);\n\n  useEffect(() => {\n    const { width } = wrapperRef.current.getBoundingClientRect();\n    dispatch({ type: \"setCarouselWidth\", payload: width });\n  }, [wrapperRef]);\n\n  const slideTransition = () => {\n    let newActiveSlides = [];\n\n    if (activeItem === children.length - 1)\n      newActiveSlides = [\n        children[children.length - 2],\n        children[children.length - 1],\n        children[0]\n      ];\n    else if (activeItem === 0)\n      newActiveSlides = [\n        children[children.length - 1],\n        children[0],\n        children[1]\n      ];\n    else newActiveSlides = children.slice(activeItem - 1, activeItem + 2);\n\n    dispatch({\n      type: \"triggerSlideTransition\",\n      payload: {\n        activeSlides: newActiveSlides,\n        translateValue: getDimensions(wrapperRef.current).width,\n        currentSlideTransition: 0\n      }\n    });\n  };\n\n  const renderChildren = () =>\n    activeSlides.map((slide, i) => (\n      <CarouselItem key={i} index={i} overrideFit={slide.props[\"data-itemFit\"]}>\n        {slide}\n      </CarouselItem>\n    ));\n\n  if (!children) {\n    return (\n      <Wrapper\n        tabIndex={0}\n        ref={wrapperRef}\n        data-testid=\"carousel-wrapper-no-children\"\n      >\n        <CarouselWrapper\n          translateValue={translateValue}\n          style={{\n            width: \"100%\",\n            transform: `translate(-${translateValue}px, 0)`\n          }}\n          data-name=\"carouselWrapper\"\n        >\n          <h2>You need to pass some elements in to navigate through!</h2>\n        </CarouselWrapper>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper tabIndex={0} ref={wrapperRef} data-testid=\"carousel-wrapper\">\n      {controlsOptions.show && children.length > 0 && (\n        <CarouselButton previous />\n      )}\n\n      <CarouselWrapper\n        translateValue={translateValue}\n        width={getDimensions(wrapperRef.current).width * activeSlides.length}\n        height={getDimensions(wrapperRef.current).height}\n        transition={currentSlideTransition}\n        data-name=\"carouselWrapper\"\n      >\n        {renderChildren()}\n      </CarouselWrapper>\n\n      {controlsOptions.show && children.length > 0 && <CarouselButton />}\n\n      {indicatorOptions.show && <Indicators />}\n    </Wrapper>\n  );\n};\nexport default Carousel;\n","import { useEffect, useState } from \"react\";\n\nconst useWindowResizeEvent = () => {\n  const getWindowWidth = () => window.innerWidth;\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n\n  useEffect(() => {\n    const resize = () => {\n      setWindowWidth(getWindowWidth());\n    };\n\n    window.addEventListener(\"resize\", resize);\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  return windowWidth;\n};\n\nexport default useWindowResizeEvent;\n","import React from \"react\";\nimport { StateProvider } from \"./store/store\";\nimport Carousel from \"./components/Carousel/Carousel\";\n\nconst SimpleCarousel = ({\n  children,\n  autoPlay,\n  autoChangeTime,\n  showIndicators,\n  contentCoversContainer,\n  itemFit,\n  controlsOptions,\n  indicatorOptions\n}) => (\n  <StateProvider\n    childCount={children ? children.length : 0}\n    autoPlay={autoPlay}\n    autoChangeTime={autoChangeTime}\n    showIndicators={showIndicators}\n    contentCoversContainer={contentCoversContainer}\n    itemFit={itemFit}\n    controlsOptions={controlsOptions}\n    indicatorOptions={indicatorOptions}\n  >\n    <Carousel>{children}</Carousel>\n  </StateProvider>\n);\n\nexport default SimpleCarousel;\n","import React from \"react\";\nimport SimpleCarousel from \"simple-react-carousel\";\n\nconst App = () => {\n  return (\n    <div style={{width: \"500px\", height: \"700px\"}}>\n      <SimpleCarousel>\n        <img src=\"https://picsum.photos/1200/600\" alt=\"You can use images in the carousel!\" data-itemFit=\"cover\" />\n        <div>\n          <h2>OMG Text!</h2>\n          <p>You can use text here too!</p>\n        </div>\n        <div>\n          <h2>Text and Images!?</h2>\n          <div>\n            <p>Here is a pretty image:</p>\n            <img src=\"https://picsum.photos/600/600\" alt=\"You can use text and images in the same slide\" />\n          </div>\n        </div>\n      </SimpleCarousel>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}