{"version":3,"sources":["../../src/store/store.js","../../src/components/CarouselItem/CarouselItem.js","../../src/components/SVG/NextChevron.js","../../src/components/SVG/PreviousChevron.js","../../src/components/CarouselButton/CarouselButton.js","../../src/components/Indicators/Indicators.js","../../src/components/Carousel/Carousel.js","../../src/hooks/useWindowResizeEvent.js","../../src/index.js","App.js","index.js"],"names":["store","createContext","Provider","StateProvider","children","childCount","autoPlay","autoChangeTime","showIndicators","contentCoversContainer","itemFit","useReducer","type","payload","activeItem","carouselWidth","translateValue","state","dispatch","value","Item","styled","props","ChildWrapper","coverContainer","CarouselItem","index","overrideFit","useContext","objectFitValue","data-testid","active","data-active","width","NextChevron","height","fill","role","version","xmlns","viewBox","aria-labelledby","id","d","PreviousChevron","CarouselButtonElement","CarouselButton","previous","onClick","isFirst","isLast","Wrapper","Indicator","Indicators","useState","wrapperWidth","setWrapperWidth","useEffect","Array","key","handleClick","CarouselWrapper","getDimensions","element","Carousel","wrapperRef","useRef","windowWidth","getWindowWidth","window","setWindowWidth","resize","useWindowResizeEvent","autoPlayRef","handleNext","interval","setInterval","clearInterval","tabIndex","ref","style","transform","child","App","src","alt","data-itemFit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d875c201.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst store = createContext({});\nconst { Provider } = store;\n\nconst StateProvider = ({\n  children,\n  childCount = 0,\n  autoPlay = false,\n  autoChangeTime = 3,\n  showIndicators = true,\n  contentCoversContainer = true,\n  itemFit = \"cover\"\n}) => {\n  const [state, dispatch] = useReducer(\n    (state, { type, payload }) => {\n      switch (type) {\n        case \"updateActiveItem\":\n          return { ...state, activeItem: payload };\n        case \"setCarouselWidth\":\n          return { ...state, carouselWidth: payload };\n        case \"setTranslateValue\":\n          return { ...state, translateValue: payload };\n        case \"setToSpecificItem\": {\n          return {\n            ...state,\n            activeItem: payload,\n            translateValue: payload * state.carouselWidth\n          };\n        }\n        case \"setNextItem\": {\n          if (payload.isLast) {\n            return { ...state, translateValue: 0, activeItem: 0 };\n          } else {\n            return {\n              ...state,\n              activeItem: state.activeItem + 1,\n              translateValue: (state.activeItem + 1) * state.carouselWidth\n            };\n          }\n        }\n        case \"setPreviousItem\": {\n          if (payload.isFirst) {\n            return {\n              ...state,\n              activeItem: childCount - 1,\n              translateValue: (childCount - 1) * state.carouselWidth\n            };\n          } else {\n            return {\n              ...state,\n              activeItem: state.activeItem - 1,\n              translateValue: (state.activeItem - 1) * state.carouselWidth\n            };\n          }\n        }\n        default:\n          return state;\n      }\n    },\n    {\n      activeItem: 0,\n      childCount,\n      translateValue: 0,\n      carouselWidth: 0,\n      autoPlay,\n      autoChangeTime,\n      showIndicators,\n      contentCoversContainer,\n      itemFit\n    }\n  );\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { store, StateProvider };\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { store } from \"../../store/store\";\n\nconst Item = styled.li`\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: ${props => (props.active ? \"1\" : \"0\")};\n`;\n\nconst ChildWrapper = styled.div`\n  position: relative;\n  display: inherit;\n  max-width: 100%;\n  flex: ${({ coverContainer }) => (coverContainer ? \"1\" : \"unset\")};\n  height: 100%;\n\n  > *:first-child {\n    max-width: 100%;\n    width: ${({ width }) => `${width}px`};\n    flex: ${({ coverContainer }) => (coverContainer ? \"1\" : \"unset\")};\n    object-fit: ${({ coverContainer, itemFit }) =>\n      coverContainer ? itemFit : \"unset\"};\n  }\n`;\n\nconst CarouselItem = ({ children, index, overrideFit = false }) => {\n  const { state } = useContext(store);\n  const { activeItem, contentCoversContainer, carouselWidth, itemFit } = state;\n  const objectFitValue = overrideFit || itemFit;\n\n  return (\n    <Item\n      data-testid={`carouselItem-${index}`}\n      active={index === activeItem}\n      data-active={index === activeItem}\n    >\n      <ChildWrapper\n        coverContainer={contentCoversContainer}\n        width={carouselWidth}\n        itemFit={objectFitValue}\n      >\n        {children}\n      </ChildWrapper>\n    </Item>\n  );\n};\n\nexport default CarouselItem;\n","import React from \"react\";\n\nconst NextChevron = ({ width = 80, height = 80, fill = \"#000000\" }) => {\n  return (\n    <svg\n      data-testid=\"next-chevron\"\n      role=\"img\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 80 80\"\n      aria-labelledby=\"nextChevronId nextChevronDescId\"\n    >\n      <title id=\"nextChevronId\">Next Item</title>\n      <desc id=\"nextChevronDescId\">\n        An arrow to go to the next item in the carousel\n      </desc>\n      <path\n        fill={fill}\n        d=\"M36.652 18.064c1.672 1.632 18.008 18.78 18.008 18.78 0.892 0.876 1.34 2.016 1.34 3.156s-0.448 2.28-1.34 3.148c0 0-16.336 17.156-18.008 18.78-1.672 1.632-4.68 1.744-6.46 0-1.784-1.736-1.924-4.164 0-6.296l14.988-15.632-14.988-15.632c-1.924-2.132-1.784-4.564 0-6.304 1.78-1.744 4.788-1.636 6.46 0z\"\n      />\n    </svg>\n  );\n};\n\nexport default NextChevron;\n","import React from \"react\";\n\nconst PreviousChevron = ({ width = 80, height = 80, fill = \"#000000\" }) => {\n  return (\n    <svg\n      data-testid=\"previous-chevron\"\n      role=\"img\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 80 80\"\n      aria-labelledby=\"previousChevronId previousChevronDescId\"\n    >\n      <title id=\"previousChevronId\">Previous Item</title>\n      <desc id=\"previousChevronDescId\">\n        An arrow to go to the previous item in the carousel\n      </desc>\n      <path\n        fill={fill}\n        d=\"M49.808 18.064c1.784 1.744 1.924 4.172 0 6.304l-14.988 15.632 14.988 15.632c1.924 2.132 1.784 4.564 0 6.296-1.78 1.744-4.788 1.632-6.46 0-1.672-1.624-18.008-18.78-18.008-18.78-0.892-0.868-1.34-2.008-1.34-3.148s0.448-2.28 1.34-3.156c0 0 16.336-17.148 18.008-18.78 1.672-1.636 4.68-1.744 6.46 0z\"\n      />\n    </svg>\n  );\n};\n\nexport default PreviousChevron;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { store } from \"../../store/store\";\nimport NextChevron from \"../SVG/NextChevron\";\nimport PreviousChevron from \"../SVG/PreviousChevron\";\n\nconst CarouselButtonElement = styled.button`\n  position: absolute;\n  top: 0;\n  ${props => (props.previous ? \"left: 10px;\" : \"right: 10px;\")};\n  z-index: 9;\n  top: 50%;\n  transform: translateY(-50%) scale(1);\n  background: rgba(0, 0, 0, 0.75);\n  border: none;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem 0;\n  border-radius: 3px;\n  transition: all 0.3s ease;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.16), 0 0 3px rgba(0, 0, 0, 0.23);\n\n  &:hover {\n    cursor: pointer;\n    transform: translateY(-50%) scale(1.05);\n  }\n`;\n\nconst CarouselButton = ({ previous }) => {\n  const { state, dispatch } = useContext(store);\n  const { activeItem, childCount } = state;\n\n  const handleNext = () => {\n    dispatch({\n      type: \"setNextItem\",\n      payload: { isLast: activeItem === childCount - 1 }\n    });\n  };\n\n  const handlePrev = () => {\n    dispatch({\n      type: \"setPreviousItem\",\n      payload: { isFirst: activeItem === 0 }\n    });\n  };\n\n  const handleClick = () => {\n    if (previous) {\n      handlePrev();\n      return;\n    }\n\n    handleNext();\n  };\n\n  const renderButtonBody = () => {\n    if (previous) {\n      return <PreviousChevron width={32} height={32} fill=\"#ffffff\" />;\n    }\n\n    return <NextChevron width={32} height={32} fill=\"#ffffff\" />;\n  };\n\n  return (\n    <CarouselButtonElement onClick={handleClick} previous={previous}>\n      {renderButtonBody()}\n    </CarouselButtonElement>\n  );\n};\n\nexport default CarouselButton;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { store } from \"../../store/store\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: ${props => props.width}px;\n  justify-content: space-between;\n  margin: auto;\n  position: absolute;\n  bottom: 5px;\n  left: 0;\n  right: 0;\n`;\n\nconst Indicator = styled.div`\n  width: 20px;\n  height: 5px;\n  background-color: ${props =>\n    props.active ? \"rgba(0,0,0,0.75)\" : \"rgba(255,255,255,0.75)\"};\n  border-radius: 50px;\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.16), 0 0 3px rgba(0, 0, 0, 0.23);\n  transition: all 0.3s ease;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Indicators = () => {\n  const { state, dispatch } = useContext(store);\n  const { childCount, activeItem } = state;\n  const [wrapperWidth, setWrapperWidth] = useState(20 * childCount);\n\n  const handleClick = index => {\n    dispatch({ type: \"setToSpecificItem\", payload: index });\n  };\n\n  const renderIndicators = () => {\n    return [...Array(childCount).fill(\"\")].map((_, index) => (\n      <Indicator\n        key={`indicator-${index}`}\n        data-testid={`indicator-${index}`}\n        data-active={index === activeItem}\n        active={index === activeItem}\n        onClick={() => handleClick(index)}\n      />\n    ));\n  };\n\n  useEffect(() => {\n    setWrapperWidth(20 * childCount + 5 * childCount);\n  }, [childCount]);\n\n  return (\n    <Wrapper width={wrapperWidth || 0} data-testid=\"indicators\">\n      {renderIndicators()}\n    </Wrapper>\n  );\n};\n\nexport default Indicators;\n","import React, { useContext, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { store } from \"../../store/store\";\nimport CarouselItem from \"../CarouselItem/CarouselItem\";\nimport useWindowResizeEvent from \"../../hooks/useWindowResizeEvent\";\nimport CarouselButton from \"../CarouselButton/CarouselButton\";\nimport Indicators from \"../Indicators/Indicators\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  height: 100vh;\n  max-height: 100%;\n`;\n\nconst CarouselWrapper = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: no-wrap;\n  transition: all 250ms ease-in-out;\n  position: relative;\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst getDimensions = element => {\n  if (element) {\n    const { width, height } = element.getBoundingClientRect();\n    return { width, height };\n  }\n\n  return { width: 500, height: 500 };\n};\n\nconst Carousel = ({ children }) => {\n  const { state, dispatch } = useContext(store);\n  const {\n    activeItem,\n    translateValue,\n    autoPlay,\n    autoChangeTime,\n    childCount,\n    showIndicators\n  } = state;\n  const wrapperRef = useRef(null);\n  const windowWidth = useWindowResizeEvent();\n  const autoPlayRef = useRef(null);\n\n  const handleNext = () => {\n    dispatch({\n      type: \"setNextItem\",\n      payload: { isLast: activeItem === childCount - 1 }\n    });\n  };\n\n  useEffect(() => {\n    autoPlayRef.current = handleNext;\n  });\n\n  useEffect(() => {\n    if (autoPlay) {\n      const play = () => {\n        autoPlayRef.current();\n      };\n\n      const interval = setInterval(play, autoChangeTime * 1000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: \"setTranslateValue\",\n      payload: activeItem * getDimensions(wrapperRef.current).width\n    });\n  }, [windowWidth]);\n\n  useEffect(() => {\n    const { width } = wrapperRef.current.getBoundingClientRect();\n    dispatch({ type: \"setCarouselWidth\", payload: width });\n  }, [wrapperRef]);\n\n  const renderChildren = () =>\n    children.map((child, i) => (\n      <CarouselItem key={i} index={i} overrideFit={child.props[\"data-itemFit\"]}>\n        {child}\n      </CarouselItem>\n    ));\n\n  if (!children) {\n    return (\n      <Wrapper\n        tabIndex={0}\n        ref={wrapperRef}\n        data-testid=\"carousel-wrapper-no-children\"\n      >\n        <CarouselWrapper\n          translateValue={translateValue}\n          style={{\n            width: \"100%\",\n            transform: `translate(-${translateValue}px, 0)`\n          }}\n        >\n          <h2>You need to pass some elements in to navigate through!</h2>\n        </CarouselWrapper>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper tabIndex={0} ref={wrapperRef} data-testid=\"carousel-wrapper\">\n      <CarouselButton previous />\n      <CarouselWrapper\n        translateValue={translateValue}\n        width={getDimensions(wrapperRef.current).width * children.length}\n        height={getDimensions(wrapperRef.current).height}\n        style={{ transform: `translate(-${translateValue}px, 0)` }}\n      >\n        {renderChildren()}\n      </CarouselWrapper>\n      <CarouselButton />\n      {showIndicators && <Indicators />}\n    </Wrapper>\n  );\n};\n\nexport default Carousel;\n","import { useEffect, useState } from \"react\";\n\nconst useWindowResizeEvent = () => {\n  const getWindowWidth = () => window.innerWidth;\n  const [windowWidth, setWindowWidth] = useState(getWindowWidth());\n\n  useEffect(() => {\n    const resize = () => {\n      setWindowWidth(getWindowWidth());\n    };\n\n    window.addEventListener(\"resize\", resize);\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  return windowWidth;\n};\n\nexport default useWindowResizeEvent;\n","import React from \"react\";\nimport { StateProvider } from \"./store/store\";\nimport Carousel from \"./components/Carousel/Carousel\";\n\nconst SimpleCarousel = ({\n  children,\n  autoPlay,\n  autoChangeTime,\n  showIndicators,\n  contentCoversContainer,\n  itemFit\n}) => (\n  <StateProvider\n    childCount={children ? children.length : 0}\n    autoPlay={autoPlay}\n    autoChangeTime={autoChangeTime}\n    showIndicators={showIndicators}\n    contentCoversContainer={contentCoversContainer}\n    itemFit={itemFit}\n  >\n    <Carousel>{children}</Carousel>\n  </StateProvider>\n);\n\nexport default SimpleCarousel;\n","import React from \"react\";\nimport SimpleCarousel from \"simple-react-carousel\";\nimport \"simple-react-carousel/dist/index.css\";\n\nconst App = () => {\n  return (\n    <div style={{width: \"500px\", height: \"700px\"}}>\n      <SimpleCarousel>\n        <img src=\"https://picsum.photos/1200/600\" alt=\"You can use images in the carousel!\" data-itemFit=\"cover\" />\n        <div>\n          <h2>OMG Text!</h2>\n          <p>You can use text here too!</p>\n        </div>\n        <div>\n          <h2>Text and Images!?</h2>\n          <div>\n            <p>Here is a pretty image:</p>\n            <img src=\"https://picsum.photos/600/600\" alt=\"You can use text and images in the same slide\" />\n          </div>\n        </div>\n      </SimpleCarousel>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}